// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Stepan Morozov",
            "email": "stepan.morozov.work@gmail.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/table": {
            "post": {
                "description": "Returns table id which should be used for joining\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Create new table",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.CreateTableResponse"
                        }
                    },
                    "500": {}
                }
            }
        },
        "/api/v1/table/help": {
            "get": {
                "description": "Documentation about events you can initiate after connect to table\nSome events has additional params, which can be passed throw field 'extra' in request\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Table events",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controller.TableEventsResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/table/id{tableID}/join": {
            "post": {
                "description": "Subscribe to table and collaborate with other players\nYou will receive notifications about all changes on the table.\nYou also are allowed to initiate some changes(events) by yourself\nMore info about table events in /api/v1/table/help\n",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Join table",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "TableID",
                        "name": "tableID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {},
                    "500": {}
                }
            }
        }
    },
    "definitions": {
        "controller.CreateTableResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "controller.TableEventsResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "extra": {
                    "type": "object"
                },
                "response": {
                    "type": "object"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "sandcard API reference",
	Description: "Documentation for HTTP API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
